-- File auto generated by purescript-bridge! --
module NetService.ApiTypes where

import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe, Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Prim (Int, Number, String)

import Prelude
import Data.Generic.Rep (class Generic)

type SystemSignal = String

newtype SystemHealth =
    SystemHealth {
      system :: SystemSignal
    }

derive instance genericSystemHealth :: Generic SystemHealth _
derive instance newtypeSystemHealth :: Newtype SystemHealth _

--------------------------------------------------------------------------------
_SystemHealth :: Iso' SystemHealth { system :: SystemSignal}
_SystemHealth = _Newtype

--------------------------------------------------------------------------------
newtype VerRev =
    VerRev {
      version :: String
    , buildArch :: String
    , buildOS :: String
    , gitBranch :: String
    , gitHash :: String
    , gitCommitDate :: String
    , gitCommitCount :: String
    , gitStatus :: String
    }

derive instance genericVerRev :: Generic VerRev _
derive instance newtypeVerRev :: Newtype VerRev _

--------------------------------------------------------------------------------
_VerRev :: Iso' VerRev { version :: String, buildArch :: String, buildOS :: String, gitBranch :: String, gitHash :: String, gitCommitDate :: String, gitCommitCount :: String, gitStatus :: String}
_VerRev = _Newtype

--------------------------------------------------------------------------------
newtype AuthenticatedUser =
    AuthenticatedUser {
      userId :: String
    , userName :: String
    , userRealName :: String
    , userTz :: String
    , userTzOffset :: Int
    }

derive instance genericAuthenticatedUser :: Generic AuthenticatedUser _
derive instance newtypeAuthenticatedUser :: Newtype AuthenticatedUser _

--------------------------------------------------------------------------------
_AuthenticatedUser :: Iso' AuthenticatedUser { userId :: String, userName :: String, userRealName :: String, userTz :: String, userTzOffset :: Int}
_AuthenticatedUser = _Newtype

--------------------------------------------------------------------------------
newtype RespAuth =
    RespAuth {
      accessToken :: String
    , expiresIn :: Int
    , tokenType :: String
    }

derive instance genericRespAuth :: Generic RespAuth _
derive instance newtypeRespAuth :: Newtype RespAuth _

--------------------------------------------------------------------------------
_RespAuth :: Iso' RespAuth { accessToken :: String, expiresIn :: Int, tokenType :: String}
_RespAuth = _Newtype

--------------------------------------------------------------------------------
newtype ApiPortfolio =
    ApiPortfolio {
      code :: String
    , caption :: Maybe String
    , updateAt :: Maybe String
    }

derive instance genericApiPortfolio :: Generic ApiPortfolio _
derive instance newtypeApiPortfolio :: Newtype ApiPortfolio _

--------------------------------------------------------------------------------
_ApiPortfolio :: Iso' ApiPortfolio { code :: String, caption :: Maybe String, updateAt :: Maybe String}
_ApiPortfolio = _Newtype

--------------------------------------------------------------------------------
newtype ApiOhlcv =
    ApiOhlcv {
      at :: String
    , open :: Maybe Number
    , high :: Maybe Number
    , low :: Maybe Number
    , close :: Maybe Number
    , volume :: Int
    , source :: Maybe String
    }

derive instance genericApiOhlcv :: Generic ApiOhlcv _
derive instance newtypeApiOhlcv :: Newtype ApiOhlcv _

--------------------------------------------------------------------------------
_ApiOhlcv :: Iso' ApiOhlcv { at :: String, open :: Maybe Number, high :: Maybe Number, low :: Maybe Number, close :: Maybe Number, volume :: Int, source :: Maybe String}
_ApiOhlcv = _Newtype

--------------------------------------------------------------------------------
newtype AuthTempCode =
    AuthTempCode {
      code :: String
    }

derive instance genericAuthTempCode :: Generic AuthTempCode _
derive instance newtypeAuthTempCode :: Newtype AuthTempCode _

--------------------------------------------------------------------------------
_AuthTempCode :: Iso' AuthTempCode { code :: String}
_AuthTempCode = _Newtype

--------------------------------------------------------------------------------
newtype AuthClientId =
    AuthClientId {
      clientid :: String
    }

derive instance genericAuthClientId :: Generic AuthClientId _
derive instance newtypeAuthClientId :: Newtype AuthClientId _

--------------------------------------------------------------------------------
_AuthClientId :: Iso' AuthClientId { clientid :: String}
_AuthClientId = _Newtype

--------------------------------------------------------------------------------
